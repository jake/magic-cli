#!/usr/bin/env ruby
require './commando-helpers.rb'

program :description, 'Takes a batch of frame sequences and renders them to individual lossless video file'
program :version, '1.0.0'

heading program :name

command :loop do |c|
  c.description = 'Sorts sequences in <input> and renders them to <output>'
  c.option '--input DIR', String, 'Input directory'
  c.option '--output DIR', String, 'Output directory'
  c.action do |args, options|
    options.default \
      input: "./input",
      output: "./output"
    
    options.input = File.expand_path(options.input)
    options.output = File.expand_path(options.output)

    dump_options(options)

    if ! File.directory?(options.input)
      crash "Input directory '#{options.input}' does not exist"
    end

    if ! File.directory?(options.output)
      warning "Output directory '#{options.output}' does not exist, creating it..."
      Dir.mkdir(options.output)
    end

    Dir.glob("#{options.input}/*") do |shot|
      shot_id = shot.strip.split('/').last

      if File.exists?("#{options.output}/#{shot_id}.mov")
        puts "Skipping shot #{shot_id}, #{options.output}/#{shot_id}.mov already exists."
        next
      end

      system "commando runger-sort #{Shellwords.escape(shot)}"

      if $?.exitstatus == 0
        system "commando render-seq --input #{Shellwords.escape(shot)} --output #{Shellwords.escape(options.output)}"
      else
        warning "runger-sort commando failed on #{shot}"
      end
    end
  end
end
default_command :loop

